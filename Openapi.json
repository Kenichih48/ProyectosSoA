openapi: 3.0.1
info:
  title: MyServiceAPI
  version: '1.0'
paths:
  /GetFullMeal:
    get:
      tags:
        - UserRequest
      parameters:
        - name: Id
          in: query
          schema:
            type: string
        - name: comida
          in: query
          schema:
            type: string
        - name: tipo
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /GetDessert:
    get:
      tags:
        - UserRequest
      parameters:
        - name: Id
          in: query
          schema:
            type: string
        - name: comida1
          in: query
          schema:
            type: string
        - name: tipo1
          in: query
          schema:
            type: string
        - name: comida2
          in: query
          schema:
            type: string
        - name: tipo2
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /GetDish:
    get:
      tags:
        - UserRequest
      parameters:
        - name: Id
          in: query
          schema:
            type: string
        - name: comida1
          in: query
          schema:
            type: string
        - name: tipo1
          in: query
          schema:
            type: string
        - name: comida2
          in: query
          schema:
            type: string
        - name: tipo2
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /GetDrink:
    get:
      tags:
        - UserRequest
      parameters:
        - name: Id
          in: query
          schema:
            type: string
        - name: comida1
          in: query
          schema:
            type: string
        - name: tipo1
          in: query
          schema:
            type: string
        - name: comida2
          in: query
          schema:
            type: string
        - name: tipo2
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
components: {}
openapi: 3.0.1
info:
  title: MyServiceAPI
  version: '1.0'
paths:
  /GetFullMeal:
    get:
      tags:
        - UserRequest
      parameters:
        - name: Id
          in: query
          schema:
            type: string
        - name: comida
          in: query
          schema:
            type: string
        - name: tipo
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /GetDessert:
    get:
      tags:
        - UserRequest
      parameters:
        - name: Id
          in: query
          schema:
            type: string
        - name: comida1
          in: query
          schema:
            type: string
        - name: tipo1
          in: query
          schema:
            type: string
        - name: comida2
          in: query
          schema:
            type: string
        - name: tipo2
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /GetDish:
    get:
      tags:
        - UserRequest
      parameters:
        - name: Id
          in: query
          schema:
            type: string
        - name: comida1
          in: query
          schema:
            type: string
        - name: tipo1
          in: query
          schema:
            type: string
        - name: comida2
          in: query
          schema:
            type: string
        - name: tipo2
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /GetDrink:
    get:
      tags:
        - UserRequest
      parameters:
        - name: Id
          in: query
          schema:
            type: string
        - name: comida1
          in: query
          schema:
            type: string
        - name: tipo1
          in: query
          schema:
            type: string
        - name: comida2
          in: query
          schema:
            type: string
        - name: tipo2
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
components: {}
